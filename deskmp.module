<?php

/**
 * @file
 * Description of module file
 */

define('DESKMP_SITE_KEY', variable_get('deskmp_site_key', NULL));
define('DESKMP_MULTIPASS_API_KEY', variable_get('deskmp_multipass_key', NULL));


/**
 * Implement hook_menu
 */
function deskmp_menu() {
  $items = array();

  $items['admin/config/system/deskmp'] = array(
    'title' => 'Desk Multipass', 
    'description' => 'Manage your integration settings with Desk.com', 
    'page callback' => 'drupal_get_form',
    'page arguments' => array('deskmp_admin_form'),
    'access callback' => 'user_access',
    'access arguments' => array('administer desk multipass'),
    'type' => MENU_NORMAL_ITEM,
  );
  
  $items[variable_get('deskmp_path', 'support')] = array(
    'title' => 'Support', 
    'page callback' => 'deskmp_redirect',
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}



/**
 * Implement hook_permission.
 */
function deskmp_permission() {
  return array(
    'administer desk multipass' => array(
      'title' => t('Administer Desk.com Multipass'), 
      'description' => t('Administer API entries and settings for Desk.com multipass integration.'),
    ),
  );
}



/**
 * Implement hook_user_login.
 */
function deskmp_user_login(&$edit, $account) {
  // Redirect the user to the Desk.com page if this setting is on and the url is
  // user/login/desk. This is where the desk.com multipass login callback should
  // point to.
  if (!isset($_POST['form_id']) || $_POST['form_id'] != 'user_pass_reset') {
    if (variable_get('deskmp_redirect', TRUE) && ($_GET['q'] == 'user/login/desk') && !isset($_GET['destination'])) {
      deskmp_redirect();
    }
  }
}



/**
 * Implement hook_user_logout.
 */
function deskmp_user_logout($account) {
  // Redirect the user to the Desk.com page if this setting is on and the url is
  // user/logout/desk. This is where the desk.com multipass logout callback 
  // should point to.
  if (variable_get('deskmp_redirect', TRUE) && ($_GET['q'] == 'user/logout/desk') && !isset($_GET['destination'])) {
    deskmp_redirect();
  }
}



/**
 * Implement hook_help.
 */
function deskmp_help($path, $arg) {
  switch ($path) {
    case 'admin/help#deskmp':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t("The Desk Multipass module implements the single sign-on capabilities of support solution provider Desk.com") . '<p>';
      
      $output .= '<h3>' . t('Requirements') . '</h3>';
      $link = l(t('You can read more about multipass here.'), 'http://dev.desk.com/docs/portal/multipass');
      $output .= '<p>' . t("You will need a Desk.com account (http://yourname.desk.com) with a multipass API key.  !link", array('!link' => $link)) . '<p>';
      
      $output .= '<h3>' . t('Usage') . '</h3>';
      $output .= '<p>' . t("When you configure Desk.com Multipass with your site key and multipass api, you can set a menu item (such as /support) that will automatically redirect the user to your Desk.com installation. If the user does not already exist, it will be created.") . '<p>';
      
      global $base_url;
      $login = $base_url . '/user/login/desk';
      $logout = $base_url . '/user/logout/desk';
      $output .= '<p>' . t("Desk.com also allows you to define login and logout redirection URLs so that users who click 'Login' or 'Logout' from Desk.com will be redirected back to your site.  If you have enabled redirection on the settings page (it is on by default), set these as @login and @logout, respectively. If the user clicks login or logout on the Desk.com installation with these addresses in place, they will be sent back to Desk.com after they have finished logging in or out.", array('@login' => $login, '@logout' => $logout)) . '<p>';
      
      return $output;
      break;
   }
}



/**
 * Callback function to create deskmp_admin_form.
 */
function deskmp_admin_form() {

  global $base_url;
  
  $form['deskmp_site_key'] = array(
    '#type' => 'textfield',
    '#title' => t('Site key'),
    '#description' => t('The subdomain of your Desk.com account.'),
    '#field_prefix' => 'http://',
    '#field_suffix' => '.desk.com',
    '#size' => 20,
    '#required' => TRUE,
    '#default_value' => variable_get('deskmp_site_key', NULL),
  );
  
  $form['deskmp_multipass_key'] = array(
    '#type' => 'textfield',
    '#title' => t('Multipass key'),
    '#description' => t('Your multiplass API key. !link ', array('!link' => l(t('Click here for more information about obtaining your Multipass API key.'), 'http://dev.desk.com/docs/portal/multipass', array('attributes' => array('target' => '_blank'))))),
    '#size' => 38,
    '#required' => TRUE,
    '#default_value' => variable_get('deskmp_multipass_key', NULL),
  );
  
  $form['deskmp_path'] = array(
    '#type' => 'textfield',
    '#title' => t('Local path'),
    '#description' => t('The local path that will direct users to your Desk installation.'),
    '#field_prefix' => "$base_url/",
    '#size' => 30,
    '#required' => TRUE,
    '#default_value' => variable_get('deskmp_path', 'support'),
  );
  
  $form['deskmp_redirect'] = array(
    '#type' => 'checkbox',
    '#title' => t('Allow login/logout redirection to the desk.com site'),
    '#description' => t('Set the login and logout redirects on Desk.com to user/login/desk and user/logout/desk, respectively. If they log in/out by visiting these paths, they will be directed back to your Desk site.'),
    '#default_value' => variable_get('deskmp_redirect', TRUE),
  );
  
  $form['#submit'][] = 'deskmp_admin_form_submit_message';

  return system_settings_form($form);
}



/**
 * Additional submit callback for deskmp_admin_form.
 */
function deskmp_admin_form_submit_message($form, &$form_state) {  
  // If the path settings have changed, prompt the user to clear the cache.
  if ($form_state['values']['deskmp_path'] != variable_get('deskmp_path', 'support')) {
    drupal_set_message(t('You will need to !clear for your path setting to take effect.', array('!clear' => l(t('clear your cache'), 'admin/config/development/performance'))), 'warning');
  }
}



/**
 * Page callback for the redirection page.
 */
function deskmp_redirect_page() {
  if (_deskmp_is_configured()) {
    deskmp_redirect();
  }
  
  else {
    return t('Desk Multipass redirection has not been properly configured.');
  }
}




/**
 * Some explanation of what the function does
 *
 * @param $data
 *   Information about this parameter
 *
 * @return
 *   Return value
 */
function deskmp_redirect() {
  if (_deskmp_is_configured()) {
    // Redirect the user to the appropriate desk.com destination.
    if (user_is_logged_in()) {
      $destination = deskmp_multipass_url();
    }
    
    else {
      $subdomain = DESKMP_SITE_KEY;
      $destination = "http://$subdomain.desk.com";
    }
    
    drupal_goto($destination);
  }
}



/**
 * Some explanation of what the function does
 *
 * @param $data
 *   Information about this parameter
 *
 * @return
 *   Return value
 */
function deskmp_multipass_url() {

  global $user;

  $hash = hash('sha1', DESKMP_MULTIPASS_API_KEY . DESKMP_SITE_KEY, TRUE);
  $salted = substr($hash, 0, 16);
  $iv = 'OpenSSL for Ruby';
  
  // Build json data
  $user_data = array(
    'uid' => $user->uid,
    'customer_email' => $user->mail,
    'customer_name' => $user->name,
    'expires' => date('c', strtotime('+5 minutes')),
  );
  
  $data = json_encode($user_data);
  
  // XOR first block of data with IV
  for ($i = 0; $i < 16; $i++) {
    $data[$i] = $data[$i] ^ $iv[$i];
  }
  
  // pad using standard PKCS#5 padding with block size of 16 bytes
  $pad = 16 - (strlen($data) % 16);
  $data = $data . str_repeat(chr($pad), $pad);
  
  // encrypt data using AES128-cbc
  $cipher = mcrypt_module_open(MCRYPT_RIJNDAEL_128, '', MCRYPT_MODE_CBC, '');
  mcrypt_generic_init($cipher, $salted, $iv);
  $multipass = mcrypt_generic($cipher, $data);
  mcrypt_generic_deinit($cipher);
  
  // Base64 encode the encrypted data
  $multipass = base64_encode($multipass);
  
  // Convert encoded data to the URL safe variant
  $multipass = preg_replace('/\=$/', '', $multipass);
  $multipass = preg_replace('/\n/', '', $multipass);
  $multipass = preg_replace('/\+/', '-', $multipass);
  $multipass = preg_replace('/\//', '_', $multipass);
  
  // Build an HMAC-SHA1 signature using the multipass string and your API key
  $signature = hash_hmac("sha1", $multipass, DESKMP_MULTIPASS_API_KEY, TRUE);
  
  // Base64 encode the signature
  $signature = base64_encode($signature);
  
  // Finally, URL encode the multipass and signature
  $multipass = urlencode($multipass);
  $signature = urlencode($signature);
  
  $subdomain = DESKMP_SITE_KEY;
  return "http://$subdomain.desk.com/customer/authentication/multipass/callback?multipass=$multipass&signature=$signature";
}



function _deskmp_is_configured() {
  $site_key = variable_get('deskmp_site_key', NULL);
  $multipass_key = variable_get('deskmp_multipass_key', NULL);
  
  return (!empty($site_key) && !empty($multipass_key));
}